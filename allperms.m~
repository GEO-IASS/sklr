function perms = allperms(inliers, outliers, no_reps)
% LISTPERMS returns all possible permutations
% 
% perms = allperms(inliers, outliers, reps)
%
% Function allperms returns all possible selections of two points from
% the inliers and the third point from the outliers. Number of repetitions 
% is added as the forth argument. For instance, allperms([1 2 3],[4 ]) returns:
% [ 1     1     2    10
%   1     1     3    10
%   2     2     1    10
%   2     2     3    10
%   3     3     1    10
%   3     3     2    10 ]
% 
% The output of the function is used to generate inter-class inequality constraints.
%
% input arguments:
% no_classes   ----  number of classes
% no_reps      ----  number of repetitions (default = 1)
%
% output arguments:
% perms        ----  all possible inter-class permutations
%
% (C) Ehsan Amid, Aalto University
if numel(inliers) == 1
    perms = [];
    return
else
    base = nchoosek(inliers, 2);
end
last = ones(size(base,1),1) * outliers(:)';
perms = [repmat(base,length(outliers),1), last(:), no_reps * ones(numel(last),1)];
